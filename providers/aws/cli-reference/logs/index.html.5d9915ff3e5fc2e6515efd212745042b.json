{"head":{"title":"Serverless Framework Commands - AWS Lambda - Logs","menuText":"Logs","menuOrder":5,"description":"View logs of your AWS Lambda Function within your terminal using the Serverless Framework","layout":"Page"},"body":"<!-- DOCS-SITE-LINK:START automatically generated  -->\n### [Read this on the main serverless docs site](https://www.serverless.com/framework/docs/providers/aws/cli-reference/logs)\n<!-- DOCS-SITE-LINK:END -->\n<h1 id=\"logs\"><a href=\"#logs\" class=\"phenomic-HeadingAnchor\">#</a>Logs</h1>\n<p>Lets you watch the logs of a specific function.</p>\n<pre><code class=\"hljs language-bash\">serverless logs <span class=\"hljs-_\">-f</span> hello</code></pre>\n<h2 id=\"options\"><a href=\"#options\" class=\"phenomic-HeadingAnchor\">#</a>Options</h2>\n<ul>\n<li><code>--function</code> or <code>-f</code> The function you want to fetch the logs for. <strong>Required</strong></li>\n<li><code>--stage</code> or <code>-s</code> The stage you want to view the function logs for. If not provided, the plugin will use the default stage listed in <code>serverless.yml</code>. If that doesn't exist either it'll just fetch the logs from the <code>dev</code> stage.</li>\n<li><code>--region</code> or <code>-r</code> The region you want to view the function logs for. If not provided, the plugin will use the default region listed in <code>serverless.yml</code>. If that doesn't exist either it'll just fetch the logs from the <code>us-east-1</code> region.</li>\n<li><code>--startTime</code> A specific unit in time to start fetching logs from (ie: <code>2010-10-20</code> or <code>1469705761</code>). Here's a list of the supported string formats:</li>\n</ul>\n<pre><code class=\"hljs language-bash\">30m                   <span class=\"hljs-comment\"># since 30 minutes ago</span>\n2h                    <span class=\"hljs-comment\"># since 2 hours ago</span>\n3d                    <span class=\"hljs-comment\"># since 3 days ago</span>\n\n2013-02-08            <span class=\"hljs-comment\"># A calendar date part</span>\n2013-W06-5            <span class=\"hljs-comment\"># A week date part</span>\n2013-039              <span class=\"hljs-comment\"># An ordinal date part</span>\n\n20130208              <span class=\"hljs-comment\"># Basic (short) full date</span>\n2013W065              <span class=\"hljs-comment\"># Basic (short) week, weekday</span>\n2013W06               <span class=\"hljs-comment\"># Basic (short) week only</span>\n2013050               <span class=\"hljs-comment\"># Basic (short) ordinal date</span>\n\n2013-02-08T09         <span class=\"hljs-comment\"># An hour time part separated by a T</span>\n20130208T080910,123   <span class=\"hljs-comment\"># Short date and time up to ms, separated by comma</span>\n20130208T080910.123   <span class=\"hljs-comment\"># Short date and time up to ms</span>\n20130208T080910       <span class=\"hljs-comment\"># Short date and time up to seconds</span>\n20130208T0809         <span class=\"hljs-comment\"># Short date and time up to minutes</span>\n20130208T08           <span class=\"hljs-comment\"># Short date and time, hours only</span></code></pre>\n<ul>\n<li><code>--filter</code> You can specify a filter string to filter the log output. This is useful if you want to to get the <code>error</code> logs for example.</li>\n<li><code>--tail</code> or <code>-t</code> You can optionally tail the logs and keep listening for new logs in your terminal session by passing this option.</li>\n<li><code>--interval</code> or <code>-i</code> If you choose to tail the output, you can control the interval at which the framework polls the logs with this option. The default is <code>1000</code>ms.</li>\n</ul>\n<h2 id=\"examples\"><a href=\"#examples\" class=\"phenomic-HeadingAnchor\">#</a>Examples</h2>\n<h3 id=\"aws\"><a href=\"#aws\" class=\"phenomic-HeadingAnchor\">#</a>AWS</h3>\n<p><strong>Note:</strong> There's a small lag between invoking the function and actually having the log event registered in CloudWatch. So it takes a few seconds for the logs to show up right after invoking the function.</p>\n<pre><code class=\"hljs language-bash\">serverless logs <span class=\"hljs-_\">-f</span> hello --startTime 5h</code></pre>\n<p>This will fetch the logs that happened in the past 5 hours.</p>\n<pre><code class=\"hljs language-bash\">serverless logs <span class=\"hljs-_\">-f</span> hello --startTime 1469694264</code></pre>\n<p>This will fetch the logs that happened starting at epoch <code>1469694264</code>.</p>\n<pre><code class=\"hljs language-bash\">serverless logs <span class=\"hljs-_\">-f</span> hello -t</code></pre>\n<p>Serverless will tail the CloudWatch log output and print new log messages coming in.</p>\n<pre><code class=\"hljs language-bash\">serverless logs <span class=\"hljs-_\">-f</span> hello --filter serverless</code></pre>\n<p>This will fetch only the logs that contain the string <code>serverless</code></p>\n","__filename":"providers\\aws\\cli-reference\\logs.md","__url":"/providers/aws/cli-reference/logs/","__resourceUrl":"/providers/aws/cli-reference/logs/index.html","__dataUrl":"/providers/aws/cli-reference/logs/index.html.5d9915ff3e5fc2e6515efd212745042b.json"}